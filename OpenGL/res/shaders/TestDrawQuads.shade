#shader vertex
#version 430 core 

layout(location = 0) in vec4 position;
layout(location = 1) in vec4 color;
layout(location = 2) in vec2 texCoords;
layout(location = 3) in float samplerIndex;
layout(location = 4) in vec2 modelTranslationVector;

out vec4 v_Color;
out vec2 v_TexCoords;
out float v_SamplerIndex;

uniform mat4 u_Projection;
uniform mat4 u_View;

void main()
{
    mat4 modelMatrix = mat4(
    vec4(1.0,0.0,0.0,0.0),
    vec4(0.0,1.0,0.0,0.0),
    vec4(0.0,0.0,1.0,0.0),
    modelTranslationVector, 0.0, 1.0
    );

    mat4 MVP = u_Projection * u_View * modelMatrix;

    gl_Position = MVP * position;
    v_Color = color;
    v_TexCoords = texCoords;
    v_SamplerIndex = samplerIndex;
}

#shader fragment
#version 330 core 
#extension GL_ARB_explicit_uniform_location : enable

in vec4 v_Color;
in vec2 v_TexCoords;
in float v_SamplerIndex;

uniform sampler2D u_Texture[10];
uniform bool u_EnableTexture;

layout(location = 0) out vec4 outputColor;

void main()
{
    if(u_EnableTexture)
    {
        int index = int(v_SamplerIndex);
        vec4 texColor = texture(u_Texture[index], v_TexCoords); 
        outputColor = texColor;
        return;
    }
    outputColor = v_Color;
}